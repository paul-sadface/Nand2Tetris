// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Bit.hdl
/**
 * 1-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value:
 * if (load(t)) out(t+1) = in(t), else out(t+1) = out(t)
 */
CHIP Bit {
    IN in, load;
    OUT out;

    PARTS:
    Mux(a=rout, b=in, sel=load, out=a);
    DFF(in=a, out=rout, out=out); // out(t) = in(t-1)
    
    /** To my understanding, when load = 0, the out(t+1) = out(t)
     *  When this happens, the input to DFF and output are the same.
     *  This is a feedback loop, and thus the out(t) is a function of in(t-1)
     *  So in this case, because we set the output of DFF to rout, in the next tick rout = out(t-1)
     *  Thus, when load is 0, the output of Bit should be the output from the previous tick.
     *  Not exactly sure though; I just wrote this to hopefully understand it better.
    */
}
