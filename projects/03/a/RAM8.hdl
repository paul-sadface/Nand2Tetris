// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    
    // Quite tough to figure out.
    
    // Sets load to the address corresponding to the register via a letter.
    // The rest will be zero, continuing to hold their value.
    // E.g. if load was true and the address was 0, the input would be loaded into the first register.
    
    DMux8Way(in=load, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    
    // Loads or continue to hold their value.
    Register(in=in, load=a, out=r1);
    Register(in=in, load=b, out=r2);
    Register(in=in, load=c, out=r3);
    Register(in=in, load=d, out=r4);
    Register(in=in, load=e, out=r5);
    Register(in=in, load=f, out=r6);
    Register(in=in, load=g, out=r7);
    Register(in=in, load=h, out=r8);
    
    // The output will be the value that the register at address currently holds regardless if load is 
    // true or false.
    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address, out=out);
}
